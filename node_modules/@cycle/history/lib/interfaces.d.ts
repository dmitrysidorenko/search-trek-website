export declare type Pathname = string;
export declare type QueryString = string;
export declare type Query = Object;
export declare type LocationState = Object;
export declare type Action = 'PUSH' | 'POP' | 'REPLACE';
export declare type LocationKey = string;
export interface Location {
    pathname?: Pathname;
    search?: QueryString;
    query?: Query;
    state?: LocationState;
    action?: Action;
    key?: LocationKey;
    hash?: string;
    type?: string;
    value?: any;
}
export declare type unlistenFn = () => void;
export declare type Listener = (location: Location) => void;
export interface History {
    listen(listener: Listener): unlistenFn;
    push(location: Location | Pathname): void;
    replace(location: Location | Pathname): void;
    createHref(href: Pathname): string;
    createLocation(location: Location | Pathname): Location;
    getCurrentLocation(): Location;
    addCompleteCallback?: (fn: () => void) => void;
    complete?: () => void;
}
export interface HistoryDriverOptions {
    capture?: boolean;
    onError?: (err: Error) => void;
}
